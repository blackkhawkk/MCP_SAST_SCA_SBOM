MIT License

Copyright (c) 2025 MCP Security Server Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

---

## Third-Party Licenses

This project includes or depends on third-party software with the following licenses:

### Dependencies

- **@modelcontextprotocol/sdk**: MIT License
- **zod**: MIT License
- **execa**: MIT License
- **fs-extra**: MIT License
- **yaml**: ISC License
- **semver**: ISC License
- **commander**: MIT License

### Development Dependencies

- **typescript**: Apache-2.0 License
- **tsx**: MIT License
- **jest**: MIT License
- **eslint**: MIT License

### Security Tools Integration

- **Snyk**: Commercial license (separate installation required)
- **CycloneDX**: Apache-2.0 License

### OWASP Juice Shop (Test Target)

- **License**: MIT License
- **Purpose**: Educational and testing purposes only
- **Note**: This project analyzes Juice Shop but does not include its source code

## Attribution

This project was developed for educational purposes to demonstrate:
- Model Context Protocol (MCP) implementation
- Security analysis techniques
- Software Bill of Materials (SBOM) generation
- DevSecOps integration patterns

Special thanks to:
- OWASP Project for providing intentionally vulnerable applications
- Model Context Protocol team for the specification
- Snyk for vulnerability database access
- CycloneDX community for SBOM standards
